[build-system]
requires = ["setuptools>=64", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
# This may be empty, but is needed to enable 'setuptools-scm'
version_scheme = "post-release"
local_scheme = "node-and-timestamp"

[project]
name = "gxr-envir"
description = "GuestXR environmental game ABM."
authors = [{ name = "Szymon Talaga",  email="stalaga@protonmail.com"}]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "numpy>=1.24",
    "scipy>=1.11",
    "matplotlib>=3.8",
    "tqdm>=4.65",
    "ipywidgets"
]
dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "setuptools-scm>=8",
    "ipython>=8.0",
    "ipdb>=0.10",
    "pytest>=7.0",
    "pylint",
    "mypy",
    "coverage",
    "build",
    "twine"
]

[tool.setuptools.packages.find]
where = ["."]
include = ["gxr", "gxr.*"]
namespaces = true

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--tb=no",
    "--capture=no",
    "--pdbcls=IPython.terminal.debugger:Pdb",
]
testpaths = ["tests"]
python_files = ["test_*.py", "benchmark_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
branch = true
command_line = "-m pytest"

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
    ]

ignore_errors = true

[tool.coverage.html]
directory = "coverage_html_report"
